{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","addNote","onChange","onSearch","type","placeholder","value","searchText","Note","e","onType","note","id","target","title","description","onDelete","keepSearchMatches","doesMatchSearch","NotesList","noteElements","notes","filter","map","src_Note","key","App","state","Date","now","newNotes","concat","Object","toConsumableArray","_this","setState","editedId","updatedKey","updatedValue","updatedNotes","toLowerCase","searchResultsNotes","includes","deletedId","keptNotes","stateString","localStorage","getItem","savedState","JSON","parse","this","stringify","setItem","src_Header","src_NotesList","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"mMAoBeA,EAlBA,SAACC,GAAD,OACbC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,sBACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAMM,QAASF,UAAU,WAA1C,cAGAH,EAAAC,EAAAC,cAAA,SACEI,SAAUP,EAAMQ,SAChBJ,UAAU,SACVK,KAAK,OACLC,YAAY,yBACZC,MAAOX,EAAMY,gBCuBNC,EAnCF,SAACb,GAaZ,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,SACEI,SAfc,SAACO,GACnBd,EAAMe,OAAOf,EAAMgB,KAAKC,GAAI,QAASH,EAAEI,OAAOP,QAe1CP,UAAU,cACVK,KAAK,OACLC,YAAY,QACZC,MAAOX,EAAMgB,KAAKG,QAEpBlB,EAAAC,EAAAC,cAAA,YACEI,SAlBoB,SAACO,GACzBd,EAAMe,OAAOf,EAAMgB,KAAKC,GAAI,cAAeH,EAAEI,OAAOP,QAkBhDP,UAAU,oBACVM,YAAY,iBACZC,MAAOX,EAAMgB,KAAKI,cAEpBnB,EAAAC,EAAAC,cAAA,QAAME,QAnBS,WACjBL,EAAMqB,SAASrB,EAAMgB,KAAKC,KAkBGb,UAAU,gBAArC,OC3BAkB,EAAoB,SAACN,GAAD,OAAUA,EAAKO,iBAiB1BC,EAfG,SAACxB,GACjB,IAUMyB,EADiBzB,EAAM0B,MAAMC,OAAOL,GACNM,IAVjB,SAACZ,GAAD,OACjBf,EAAAC,EAAAC,cAAC0B,EAAD,CACEC,IAAKd,EAAKC,GACVD,KAAMA,EACND,OAAQf,EAAMe,OACdM,SAAUrB,EAAMqB,aAMpB,OAAOpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcqB,6cCgGtBM,oMA5GbC,MAAQ,CACNN,MAAO,CACL,CACET,GAAIgB,KAAKC,MACTf,MAAO,GACPC,YAAa,GACbG,iBAAiB,IAGrBX,WAAY,MAGdN,QAAU,WACR,IAMM6B,EAAQ,CANE,CACdlB,GAAIgB,KAAKC,MACTf,MAAO,GACPC,YAAa,GACbG,iBAAiB,IAELa,OAAAC,OAAAC,EAAA,EAAAD,CAAgBE,EAAKP,MAAMN,QACzCa,EAAKC,SAAS,CAAEd,MAAOS,OAGzBpB,OAAS,SAAC0B,EAAUC,EAAYC,GAC9B,IAcMC,EAAeL,EAAKP,MAAMN,MAAME,IAdnB,SAACZ,GAClB,OAAIA,EAAKC,KAAOwB,EACK,UAAfC,GACF1B,EAAKG,MAAQwB,EACN3B,IAEPA,EAAKI,YAAcuB,EACZ3B,GAGFA,IAKXuB,EAAKC,SAAS,CAAEd,MAAOkB,OAGzBpC,SAAW,SAACM,GACV,IAAMF,EAAaE,EAAEI,OAAOP,MAAMkC,cAiB5BC,EAAqBP,EAAKP,MAAMN,MAAME,IAhBxB,SAACZ,GACnB,OAAKJ,EAKHI,EAAKG,MAAM0B,cAAcE,SAASnC,IAClCI,EAAKI,YAAYyB,cAAcE,SAASnC,IAExCI,EAAKO,iBAAkB,EAChBP,IAEPA,EAAKO,iBAAkB,EAChBP,IAXPA,EAAKO,iBAAkB,EAChBP,KAcXuB,EAAKC,SAAS,CACZd,MAAOoB,EACPlC,WAAYA,OAIhBS,SAAW,SAAC2B,GACV,IAKMC,EAAYV,EAAKP,MAAMN,MAAMC,OALlB,SAACX,GAChB,GAAIA,EAAKC,KAAO+B,EACd,OAAOhC,IAIXuB,EAAKC,SAAS,CAAEd,MAAOuB,4DAGzB,WACE,IAAMC,EAAcC,aAAaC,QAAQ,eACzC,GAAIF,EAAa,CACf,IAAMG,EAAaC,KAAKC,MAAML,GAC9BM,KAAKhB,SAAS,CAAEd,MAAO2B,uCAI3B,WACE,IAAMH,EAAcI,KAAKG,UAAUD,KAAKxB,MAAMN,OAC9CyB,aAAaO,QAAQ,cAAeR,yBAGtC,WACE,OACEjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwD,EAAD,CACE/C,WAAY4C,KAAKxB,MAAMpB,WACvBN,QAASkD,KAAKlD,QACdE,SAAUgD,KAAKhD,WAEjBP,EAAAC,EAAAC,cAACyD,EAAD,CACElC,MAAO8B,KAAKxB,MAAMN,MAClBX,OAAQyC,KAAKzC,OACbM,SAAUmC,KAAKnC,mBAtGPwC,aCCZC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASL","file":"static/js/main.c6392cdd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => (\n  <header>\n    <h1 className=\"app-header__title\">Super Sticky Notes</h1>\n    <aside className=\"app-header__controls\">\n      <button onClick={props.addNote} className=\"add-new\">\n        + New Note\n      </button>\n      <input\n        onChange={props.onSearch}\n        className=\"search\"\n        type=\"text\"\n        placeholder=\"Type here to search...\"\n        value={props.searchText}\n      />\n    </aside>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Note = (props) => {\n  const updateTitle = (e) => {\n    props.onType(props.note.id, \"title\", e.target.value);\n  };\n\n  const updateDescription = (e) => {\n    props.onType(props.note.id, \"description\", e.target.value);\n  };\n\n  const deleteNote = () => {\n    props.onDelete(props.note.id);\n  };\n\n  return (\n    <li className=\"note\">\n      <input\n        onChange={updateTitle}\n        className=\"note__title\"\n        type=\"text\"\n        placeholder=\"Title\"\n        value={props.note.title}\n      />\n      <textarea\n        onChange={updateDescription}\n        className=\"note__description\"\n        placeholder=\"Description...\"\n        value={props.note.description}\n      />\n      <span onClick={deleteNote} className=\"note__delete\">\n        X\n      </span>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note.js\";\n\nconst keepSearchMatches = (note) => note.doesMatchSearch;\n\nconst NotesList = (props) => {\n  const renderNote = (note) => (\n    <Note\n      key={note.id}\n      note={note}\n      onType={props.onType}\n      onDelete={props.onDelete}\n    />\n  );\n\n  const searchElements = props.notes.filter(keepSearchMatches);\n  const noteElements = searchElements.map(renderNote);\n  return <ul className=\"notes-list\">{noteElements}</ul>;\n};\n\nexport default NotesList;\n","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }\n    ],\n    searchText: \"\"\n  }; // end state\n\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  }; // end addNote\n\n  onType = (editedId, updatedKey, updatedValue) => {\n    const updateNote = (note) => {\n      if (note.id === editedId) {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      } else {\n        return note;\n      }\n    };\n\n    const updatedNotes = this.state.notes.map(updateNote);\n    this.setState({ notes: updatedNotes });\n  }; // end onType\n\n  onSearch = (e) => {\n    const searchText = e.target.value.toLowerCase();\n    const searchNotes = (note) => {\n      if (!searchText) {\n        note.doesMatchSearch = true;\n        return note;\n      }\n      if (\n        note.title.toLowerCase().includes(searchText) ||\n        note.description.toLowerCase().includes(searchText)\n      ) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        note.doesMatchSearch = false;\n        return note;\n      }\n    };\n    const searchResultsNotes = this.state.notes.map(searchNotes);\n    this.setState({\n      notes: searchResultsNotes,\n      searchText: searchText\n    });\n  }; // end onSearch\n\n  onDelete = (deletedId) => {\n    const keepNote = (note) => {\n      if (note.id !== deletedId) {\n        return note;\n      }\n    };\n    const keptNotes = this.state.notes.filter(keepNote);\n    this.setState({ notes: keptNotes });\n  }; // end deleteNote\n\n  componentDidMount() {\n    const stateString = localStorage.getItem(\"stateString\");\n    if (stateString) {\n      const savedState = JSON.parse(stateString);\n      this.setState({ notes: savedState });\n    }\n  }\n\n  componentDidUpdate() {\n    const stateString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"stateString\", stateString);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n          onSearch={this.onSearch}\n        />\n        <NotesList\n          notes={this.state.notes}\n          onType={this.onType}\n          onDelete={this.onDelete}\n        />\n      </div>\n    );\n  } // end render\n} // end class App\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}